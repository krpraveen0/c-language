1.Scope Rules:
-----------------
The scope of an identifier is the portion of the program in which the identifier can referenced .
For example :
a local variable defined in a block (main())

#include<stdio.h>
void main(){
    //local variable
    int num;
    add(int a, int b){
        //local varilable for add function
        printf("local variable of main() : %d",num);
        int sum;
        sum = a + b;
    }

}

Basically there are four identifier scopes :
    1) Block scope
    2) file scope
    3) function scope
    4) function-prototype scope.


Block scope:
--------------
A Block scope is a set of statement enclosed within left and right braces({ and }) respectively.
Blocks may be nested in C language.
A variable declared in a block is accessible in the block and all the inner blocks of that block, but it is 
not accessible outside that block.
If inner block declares a variable with the same name as the varilable declared by the outer block,
then the visibility of the outer block varilable ends at the point of the decalaration of the inner block


File(Global) Scope:
----------------
In file scope the identifier can be used anywhere in the current file after the decalaration of the identifier.
File scope variable is also known as global variable.
File scope identifiers may be hidden by the block decalaration having the name.

Function Scope:
--------------------
Labels(an identifier followed by a colon such as start:) are the only identifier with the function scope.
Labels can be used anywhere in the function in which they appear, but cannot be referenced outside
the function body.
Labels are used in switch statement(as case Labels) and in goto statements.
Labels are implementation details that functions hide from one another. this hiding , formally called 
information hiding(it means implementating the principle of least privilege) which is one of the most 
fundamental principles of software engineering .

Function Prototype-Scope:
-----------------------------
The only identifiers with the function-prototype-scope are those used in the parameter list of a function
prototype.

Function prototype do not requires names in the parameter list - only types are required.
ie add(int , float)
or add(int a,float b)
If a name is used in the parameter list of a function prototype then compiler ignores the name.